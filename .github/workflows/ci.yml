name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  quality:
    name: Code Quality & Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb', '**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: |
          # Try frozen lockfile first, fallback to updating if needed
          bun install --frozen-lockfile || {
            echo "‚ö†Ô∏è  Lockfile out of sync, updating..."
            bun install
          }

      - name: Run ESLint
        run: bun run lint

      - name: Check code formatting
        run: bun run format:check

      - name: Check Astro types
        run: bun run check

      - name: Spell check
        uses: streetsidesoftware/cspell-action@v7
        with:
          files: |
            **/*.{md,mdx,txt}
            src/**/*.{astro,ts,tsx,js,jsx}
            README.md
          strict: false
          inline: warning
          config: |
            {
              "version": "0.2",
              "language": "en",
              "words": [
                "astro",
                "astrojs", 
                "brutalist",
                "Ioannis",
                "Lougiakis",
                "dacrab",
                "github",
                "typescript",
                "lightningcss",
                "jsx",
                "tsx",
                "eslint",
                "tsconfig",
                "renovate",
                "kodiak"
              ],
              "ignoreWords": [
                "IOANNIS",
                "LOUGIAKIS"
              ],
              "ignorePaths": [
                "node_modules/**",
                "dist/**",
                ".astro/**",
                "*.lock",
                "*.lockb",
                "package-lock.json",
                "bun.lock"
              ]
            }

      - name: Build project (Vercel validation)
        run: bun run build
        env:
          ASTRO_TELEMETRY_DISABLED: 1

      - name: Verify build output
        run: |
          if [ ! -d "dist" ]; then
            echo "‚ùå Build failed: dist folder not created"
            exit 1
          fi
          echo "‚úÖ Build successful - ready for Vercel deployment"
          echo "üì¶ Build output size:"
          du -sh dist/

      - name: Auto-label PR
        if: github.event_name == 'pull_request'
        uses: actions/labeler@v5
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          configuration-path: .github/labeler.yml

      - name: Add Vercel deployment status
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `‚úÖ **CI passed!** All quality checks completed successfully.

            üöÄ **Vercel will automatically deploy this PR** when merged to main.
            üì¶ Build validated and ready for deployment.
            
            **Quality Checks:**
            - ‚úÖ ESLint
            - ‚úÖ Code formatting
            - ‚úÖ TypeScript types
            - ‚úÖ Spell check
            - ‚úÖ Build successful`
            })
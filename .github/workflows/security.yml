name: "🛡️ Security Analysis"

# Independent security workflow - runs separately to avoid race conditions
# Scheduled execution prevents conflicts with main pipeline

on:
  schedule:
    # Weekly security scan on Sunday at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:
    # Allow manual triggering
  push:
    # Only run on main branch for security updates
    branches: [main]
    paths:
      - '.github/workflows/security.yml'
      - 'package.json'
      - 'bun.lock'

# Separate concurrency group from main workflow
concurrency:
  group: security-${{ github.ref }}
  cancel-in-progress: true

# Security-specific permissions
permissions:
  contents: read
  security-events: write
  actions: read

env:
  BUN_VERSION: "latest"

jobs:
  # =============================================================================
  # CODEQL ANALYSIS - Static code analysis for security vulnerabilities
  # =============================================================================
  codeql:
    name: "🔍 CodeQL Analysis"
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ['javascript', 'typescript']

    steps:
      - name: "🔄 Checkout Repository"
        uses: actions/checkout@v5
        with:
          # Full history for comprehensive analysis
          fetch-depth: 0

      - name: "🛡️ Initialize CodeQL"
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          # Enhanced security and quality queries
          queries: +security-and-quality,security-extended
          # Custom configuration for better analysis
          config: |
            name: "Enhanced Security Analysis"
            queries:
              - uses: security-and-quality
              - uses: security-extended

      - name: "⚡ Setup Bun Runtime"  
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: "💾 Cache Dependencies"
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: security-deps-${{ runner.os }}-${{ hashFiles('**/bun.lockb', '**/package.json') }}
          restore-keys: |
            security-deps-${{ runner.os }}-

      - name: "📥 Install Dependencies"
        run: |
          echo "📥 Installing dependencies for security analysis..."
          bun install --frozen-lockfile || bun install
          echo "✅ Dependencies installed"

      - name: "🏗️ Build for Analysis"
        run: |
          echo "🏗️ Building project for security analysis..."
          bun run build
          echo "✅ Build completed for analysis"

      - name: "🔍 Perform CodeQL Analysis"
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ matrix.language }}"
          # Upload results even if some queries fail
          upload: failure-matching

      - name: "📊 Analysis Summary"
        run: |
          echo "📊 CodeQL Analysis completed for ${{ matrix.language }}"
          echo "Results have been uploaded to GitHub Security tab"

  # =============================================================================
  # DEPENDENCY SCAN - Check for vulnerable dependencies  
  # =============================================================================
  dependency-scan:
    name: "📦 Dependency Security"
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: codeql
    if: always() && !cancelled()
    
    steps:
      - name: "🔄 Checkout Repository"
        uses: actions/checkout@v5

      - name: "⚡ Setup Bun Runtime"
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: "🔍 Audit Dependencies"
        run: |
          echo "🔍 Scanning dependencies for security vulnerabilities..."
          
          # Bun audit (when available)
          if bun --help | grep -q audit; then
            echo "Running bun audit..."
            bun audit || echo "⚠️ Vulnerabilities found - check output above"
          else
            echo "ℹ️ Bun audit not available, using npm audit..."
            npx audit-ci --config audit-ci.json || echo "⚠️ Vulnerabilities found"
          fi

      - name: "📋 Generate Dependency Report"
        run: |
          echo "📋 Generating dependency security report..."
          echo "## 📦 Dependency Security Report" > security-report.md
          echo "Generated on: $(date)" >> security-report.md
          echo "" >> security-report.md
          
          echo "### Direct Dependencies:" >> security-report.md
          bun pm ls --depth=0 >> security-report.md || echo "Unable to list dependencies" >> security-report.md
          
          echo "✅ Dependency security scan completed"

      - name: "💾 Upload Security Report"
        uses: actions/upload-artifact@v4
        with:
          name: dependency-security-report
          path: security-report.md
          retention-days: 30

  # =============================================================================
  # SECURITY SUMMARY - Consolidate all security results
  # =============================================================================
  security-summary:
    name: "📋 Security Summary"
    runs-on: ubuntu-latest
    needs: [codeql, dependency-scan]
    if: always()
    timeout-minutes: 5
    
    steps:
      - name: "📊 Security Analysis Results"
        run: |
          echo "=== 🛡️ SECURITY ANALYSIS SUMMARY ==="
          echo "CodeQL Analysis: ${{ needs.codeql.result }}"
          echo "Dependency Scan: ${{ needs.dependency-scan.result }}"
          echo ""
          
          if [[ "${{ needs.codeql.result }}" == "success" && 
                "${{ needs.dependency-scan.result }}" == "success" ]]; then
            echo "✅ All security scans completed successfully!"
            echo "🛡️ No critical security issues detected"
          else
            echo "⚠️ Some security scans had issues - review individual jobs"
            echo "🔍 Check GitHub Security tab for detailed results"
          fi
          
          echo ""
          echo "🔗 View detailed results:"
          echo "  • Security tab: https://github.com/${{ github.repository }}/security"
          echo "  • Actions: https://github.com/${{ github.repository }}/actions"

      - name: "🔔 Security Notification"
        if: failure()
        run: |
          echo "🚨 Security scan detected potential issues"
          echo "Please review the security findings in:"
          echo "1. GitHub Security tab"
          echo "2. Individual job logs above"
          echo "3. Dependency security report artifact"

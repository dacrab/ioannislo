---
const skillCategories = [
  {
    title: 'FRONTEND',
    skills: ['HTML', 'CSS', 'JavaScript', 'React', 'Astro', 'TypeScript'],
  },
  {
    title: 'BACKEND',
    skills: ['Node.js', 'Express', 'MongoDB', 'PostgreSQL', 'REST APIs', 'Git'],
  },
  {
    title: 'TOOLS',
    skills: ['VS Code', 'Git', 'npm', 'Figma', 'Chrome DevTools', 'Terminal'],
  },
];

const primarySkills = [
  'HTML',
  'CSS',
  'JavaScript',
  'React',
  'Node.js',
  'Git',
  'TypeScript',
  'Astro',
  'MongoDB',
  'Express',
  'REST APIs',
  'npm',
];
---

<section id="skills" class="section">
  <div class="container">
    <h2 class="text-huge text-center skills-main-title">SKILLS</h2>

    <!-- Primary skills grid -->
    <div class="skills-primary">
      <h3 class="text-big skills-section-title">CORE TECHNOLOGIES</h3>
      <div class="skill-grid">
        {
          primarySkills.map((skill, index) => (
            <div
              class="skill-item"
              style={`animation-delay: ${index * 0.1}s; background: var(--yellow); padding: var(--space-sm); text-align: center; word-wrap: break-word; overflow-wrap: break-word; hyphens: auto;`}
            >
              <span
                class="text-small"
                style="display: block; line-height: 1.2;"
              >
                {skill}
              </span>
            </div>
          ))
        }
      </div>
    </div>

    <!-- Categorized skills -->
    <div class="skills-categories">
      {
        skillCategories.map((category, categoryIndex) => (
          <div
            class="skill-category brutal-card"
            style={`animation-delay: ${categoryIndex * 0.3}s`}
          >
            <h4 class="text-big category-title">{category.title}</h4>
            <div class="category-skills">
              {category.skills.map((skill, skillIndex) => (
                <span
                  class="skill-badge"
                  style={`animation-delay: ${categoryIndex * 0.3 + skillIndex * 0.1}s`}
                >
                  {skill}
                </span>
              ))}
            </div>
          </div>
        ))
      }
    </div>

    <!-- Skills philosophy -->
    <div class="skills-philosophy">
      <div class="brutal-card philosophy-card -rotate-1">
        <h3 class="text-big philosophy-title">LEARNING APPROACH</h3>
        <p class="text-body philosophy-text">
          I believe in building strong fundamentals before exploring advanced
          concepts. Each technology I learn becomes a building block for
          creating better solutions. Always curious, always improving, always
          ready for the next challenge.
        </p>
      </div>
    </div>
  </div>
</section>

<script>
  // Intersection Observer for skill animations
  const observer = new IntersectionObserver(
    entries => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const items = entry.target.querySelectorAll(
            '.skill-item, .skill-category, .skill-badge'
          );
          items.forEach(item => {
            const htmlItem = item as HTMLElement;
            htmlItem.style.animationPlayState = 'running';
          });
        }
      });
    },
    {
      threshold: 0.1,
    }
  );

  // Observe the skills section
  const skillsSection = document.querySelector('#skills');
  if (skillsSection) {
    observer.observe(skillsSection);
  }

  // Pause animations initially
  document
    .querySelectorAll('.skill-item, .skill-category, .skill-badge')
    .forEach(item => {
      const htmlItem = item as HTMLElement;
      htmlItem.style.animationPlayState = 'paused';
    });
</script>
